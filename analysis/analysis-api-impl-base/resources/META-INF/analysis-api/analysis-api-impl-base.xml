<idea-plugin xmlns:xi="http://www.w3.org/2001/XInclude">
  <xi:include href="/META-INF/extensions/compiler.xml"/>
  <xi:include href="/META-INF/analysis-api/analysis-api-platform-interface.xml"/>

  <extensionPoints>
    <extensionPoint
        qualifiedName="org.jetbrains.kotlin.kaResolveExtensionProvider"
        interface="org.jetbrains.kotlin.analysis.api.resolve.extensions.KaResolveExtensionProvider"
        area="IDEA_PROJECT"
        dynamic="true"
    />
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <projectService
        serviceInterface="org.jetbrains.kotlin.resolve.jvm.KotlinJavaPsiFacade"
        serviceImplementation="org.jetbrains.kotlin.analysis.api.impl.base.java.KaBaseKotlinJavaPsiFacade"
    />

    <projectService
        serviceInterface="org.jetbrains.kotlin.resolve.jvm.modules.JavaModuleResolver"
        serviceImplementation="org.jetbrains.kotlin.analysis.api.impl.base.java.KaBaseJavaModuleResolver"
    />

    <projectService
        serviceInterface="org.jetbrains.kotlin.load.java.structure.impl.source.JavaElementSourceFactory"
        serviceImplementation="org.jetbrains.kotlin.analysis.api.impl.base.java.source.JavaElementSourceWithSmartPointerFactory"
    />

    <projectService
        serviceInterface="org.jetbrains.kotlin.psi.KotlinReferenceProvidersService"
        serviceImplementation="org.jetbrains.kotlin.analysis.api.impl.base.references.HLApiReferenceProviderService"
    />

    <projectService
        serviceInterface="org.jetbrains.kotlin.analysis.api.projectStructure.KaModuleProvider"
        serviceImplementation="org.jetbrains.kotlin.analysis.api.impl.base.projectStructure.KaBaseModuleProvider"
    />

    <projectService
        serviceInterface="org.jetbrains.kotlin.analysis.api.platform.KotlinMessageBusProvider"
        serviceImplementation="org.jetbrains.kotlin.analysis.api.platform.KotlinProjectMessageBusProvider"
    />

    <applicationService
        serviceInterface="org.jetbrains.kotlin.analysis.api.permissions.KaAnalysisPermissionRegistry"
        serviceImplementation="org.jetbrains.kotlin.analysis.api.impl.base.permissions.KaBaseAnalysisPermissionRegistry"
    />

    <projectService
        serviceInterface="org.jetbrains.kotlin.analysis.api.platform.permissions.KaAnalysisPermissionChecker"
        serviceImplementation="org.jetbrains.kotlin.analysis.api.impl.base.permissions.KaBaseAnalysisPermissionChecker"
    />

    <projectService
        serviceInterface="org.jetbrains.kotlin.analysis.api.platform.projectStructure.KaResolutionScopeProvider"
        serviceImplementation="org.jetbrains.kotlin.analysis.api.impl.base.projectStructure.KaBaseResolutionScopeProvider"
    />

    <projectService
        serviceInterface="org.jetbrains.kotlin.analysis.api.platform.lifetime.KaLifetimeTracker"
        serviceImplementation="org.jetbrains.kotlin.analysis.api.impl.base.lifetime.KaBaseLifetimeTracker"
    />

    <projectService
        serviceInterface="org.jetbrains.kotlin.analysis.api.platform.projectStructure.KaContentScopeProvider"
        serviceImplementation="org.jetbrains.kotlin.analysis.api.impl.base.projectStructure.KaBaseContentScopeProvider"
    />

    <projectService
        serviceInterface="org.jetbrains.kotlin.analysis.api.platform.projectStructure.KotlinGlobalSearchScopeMerger"
        serviceImplementation="org.jetbrains.kotlin.analysis.api.platform.projectStructure.KotlinOptimizingGlobalSearchScopeMerger"
    />

    <applicationService serviceImplementation="org.jetbrains.kotlin.analysis.decompiled.light.classes.origin.KotlinDeclarationInCompiledFileSearcher" />

    <java.elementFinder implementation="org.jetbrains.kotlin.asJava.finder.JavaElementFinder"/>

    <registryKey
        defaultValue="false"
        description="Throw an exception in the case of inconsistency in decompiled light classes"
        key="kotlin.decompiled.light.classes.check.inconsistency"
        restartRequired="false"
    />

    <registryKey
        defaultValue="false"
        description="Allow a KaSymbol creation in an incorrect context"
        key="kotlin.analysis.unrelatedSymbolCreation.allowed"
        restartRequired="false"
    />
  </extensions>

  <extensions defaultExtensionNs="org.jetbrains.kotlin">
    <kotlinContentScopeRefiner implementation="org.jetbrains.kotlin.analysis.api.impl.base.projectStructure.KaResolveExtensionToContentScopeRefinerBridge"/>
    <kotlinGlobalSearchScopeMergeStrategy implementation="org.jetbrains.kotlin.analysis.api.impl.base.projectStructure.KotlinResolveExtensionGeneratedFileScopeMergeStrategy"/>
  </extensions>
</idea-plugin>